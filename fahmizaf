#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>
#include <signal.h>

int main()
{
    int i, pid, fd[2];
    char s[200];
    
void sigint_handler(int sig);



if (pipe(fd) == -1) {
        printf("Error: Failed to create pipe.\n");
        exit(1);
}

printf("Enter a message to send to the child processes: ");
fgets(s, 200, stdin);

    for (i = 0; i < 5; i++) {
        pid = fork();
        if (pid == -1) {
            printf("Error: Failed to create child process.\n");
            exit(1);
        }
        else if (pid == 0) {
            // Child process code
            close(fd[1]); // close unused write end of the pipe
            read(fd[0], s, 200);
            printf("Child process %d with PID %d received message: %s\n", i+1, getpid(), s);
            exit(0);
        }
        else {
            // Parent process code
            printf("Parent process with PID %d created child process %d with PID %d\n", getpid(), i+1, pid);
            close(fd[0]); // close unused read end of the pipe
            write(fd[1], s, 200);
        }



}
}
void sigint_handler(int sig)
{
printf("Jangan Kacau saya! \n");
}
